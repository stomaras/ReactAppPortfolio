{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggle() {}\n  }\n});\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n  return state;\n};\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createSlice","createStore","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","action","amount","toggle","counterReducer","type","store"],"sources":["C:/Users/spyros/Desktop/ReactAppPortfolio/fullguide/01-starting-project/01-starting-project/src/store/index.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { createStore } from \"redux\";\r\n\r\nconst initialState = { counter: 0, showCounter: true };\r\n\r\ncreateSlice({\r\n  name: \"counter\",\r\n  initialState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.amount;\r\n    },\r\n    toggle() {},\r\n  },\r\n});\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === \"increment\") {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"increase\") {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n  if (action.type === \"decrement\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"toggle\") {\r\n    return {\r\n      showCounter: !state.showCounter,\r\n      counter: state.counter,\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,OAAO;AAEnC,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAEtDJ,WAAW,CAAC;EACVK,IAAI,EAAE,SAAS;EACfH,YAAY;EACZI,QAAQ,EAAE;IACRC,SAAS,CAACC,KAAK,EAAE;MACfA,KAAK,CAACL,OAAO,EAAE;IACjB,CAAC;IACDM,SAAS,CAACD,KAAK,EAAE;MACfA,KAAK,CAACL,OAAO,EAAE;IACjB,CAAC;IACDO,QAAQ,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACL,OAAO,GAAGK,KAAK,CAACL,OAAO,GAAGQ,MAAM,CAACC,MAAM;IAC/C,CAAC;IACDC,MAAM,GAAG,CAAC;EACZ;AACF,CAAC,CAAC;AAEF,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCN,KAAK,uEAAGN,YAAY;EAAA,IAAES,MAAM;EAClD,IAAIA,MAAM,CAACI,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLZ,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEI,KAAK,CAACJ;IACrB,CAAC;EACH;EAEA,IAAIO,MAAM,CAACI,IAAI,KAAK,UAAU,EAAE;IAC9B,OAAO;MACLZ,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAGQ,MAAM,CAACC,MAAM;MACtCR,WAAW,EAAEI,KAAK,CAACJ;IACrB,CAAC;EACH;EACA,IAAIO,MAAM,CAACI,IAAI,KAAK,WAAW,EAAE;IAC/B,OAAO;MACLZ,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEI,KAAK,CAACJ;IACrB,CAAC;EACH;EAEA,IAAIO,MAAM,CAACI,IAAI,KAAK,QAAQ,EAAE;IAC5B,OAAO;MACLX,WAAW,EAAE,CAACI,KAAK,CAACJ,WAAW;MAC/BD,OAAO,EAAEK,KAAK,CAACL;IACjB,CAAC;EACH;EACA,OAAOK,KAAK;AACd,CAAC;AAED,MAAMQ,KAAK,GAAGf,WAAW,CAACa,cAAc,CAAC;AAEzC,eAAeE,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}